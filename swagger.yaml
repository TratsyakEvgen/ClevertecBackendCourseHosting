openapi: 3.0.3
info:
  title: Видеохостинг
  version: 0.0.1
servers:
  - url: http://localhost:8080
tags:
  - name: users
    description: Пользователи
  - name: channels
    description: Каналы
paths:
  /users:
    post:
      tags:
        - users
      summary: "Регистрация пользователя"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserDTO"
        required: true
      responses:
        201:
          description: "Успешная операция"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        404:
          description: "Пользователь не найден"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDTO"
              example:
                status: 404
                message: "User with id 1 not found"
        422:
          description: "Невлидные данные. Получаем список сообщений о невлидных полях разделенных '; '"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                status: 422
                message: "Incorrect format email; Incorrect format nickname"
  /users/{id}:
    put:
      summary: "Обнавление пользователя"
      tags:
        - users
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserDTO"
        required: true
      responses:
        200:
          description: "Успешая операция"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDTO"
        422:
          description: "Невлидные данные. Получаем список сообщений о невлидных полях разделенных '; '"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                status: 422
                message: "Incorrect format email; Name mustn't be empty"
  /users/{id}/subscriptions:
    get:
      tags:
        - users
      summary: "Подписки пользователя"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
            example: 1
      responses:
        200:
          description: "Успешая операция"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Subscription"
        404:
          description: "Пользователь не найден"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDTO"
              example:
                status: 404
                message: "User with id 1 not found"
  /users/{userId}/channels/{channelId}:
    post:
      tags:
        - users
      summary: "Подписка пользователя на канал"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "channelId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        404:
          description: "Пользователь или канал не найден"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDTO"
              example:
                status: 404
                message: "User with id 1 not found"
    delete:
      tags:
        - users
      summary: "Отписка пользовател от канала"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "channelId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
        404:
          description: "Пользователь или канал не найден"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorDTO"
              example:
                status: 404
                message: "User with id 1 not found"
  /channels:
    get:
      tags:
        - channels
      summary: "Список каналов"
      parameters:
        - name: "size"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
            minimum: 1
            example: 1
        - name: "page"
          in: "path"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 0
            example: 0
        - name: "name"
          in: "path"
          required: false
          schema:
            type: "string"
            example: "some"
        - name: "languageId"
          in: "path"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 1
            example: 1
        - name: "categoryId"
          in: "path"
          required: false
          schema:
            type: "integer"
            format: "int64"
            minimum: 1
            example: 1
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageDTO"
              example:
                "content": [
                  {
                    "channelId": 1,
                    "name": "Наука",
                    "subscribesCount": 3,
                    "image": "https://science.com",
                    "category": {
                      "categoryId": 1,
                      "name": "наука"
                    },
                    "language": {
                      "languageId": 1,
                      "name": "русский"
                    }
                  }
                ]
                "page": 0
                "size": 1
                "totalElements": 55
                "totalPages": 55
        422:
          description: "Невлидные данные. Получаем список сообщений о невлидных полях разделенных '; '"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                status: 422
                message: "Language id must be greater than 0; Category id must be greater than 0"
    post:
      tags:
        - channels
      summary: "Создание канала"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelInfoDTO"
        422:
          description: "Невлидные данные. Получаем список сообщений о невлидных полях разделенных '; '"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                status: 422
                message: "Author id must be greater than 0; Category id must be greater than 0"
  /channels/{id}:
    get:
      tags:
        - channels
      summary: "Получение информации по каналу"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelInfoDTO"
        404:
          description: "Канал не найден"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                status: 404
                message: "Channel with id 1 not found"
    patch:
      tags:
        - channels
      summary: "Обнавление информации по каналу"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateChannelDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelInfoDTO"
        404:
          description: "Канал не найден"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                status: 404
                message: "Channel with id 1 not found"
        422:
          description: "Невлидные данные. Получаем список сообщений о невлидных полях разделенных '; '"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
              example:
                status: 422
                message: "Language id must be greater than 0; Category id must be greater than 0"

components:
  schemas:
    PageDTO:
      type: "object"
      properties:
        content:
          type: "array"
        page:
          type: "integer"
          format: "int32"
          example: 0
        size:
          type: "integer"
          format: "int32"
          example: 10
        totalElements:
          type: "integer"
          format: "int32"
          example: 32
        totalPages:
          type: "integer"
          format: "int32"
          example: 4
    ChannelInfoDTO:
      type: "object"
      properties:
        description:
          type: "string"
          example: "about of channel"
        date:
          type: "string"
          example: "11-10-2024"
        author:
          $ref: "#/components/schemas/UserDTO"
        channelId:
          type: "integer"
          format: "int64"
          example: 2
        name:
          type: "string"
          description: "some channel name"
        subscribesCount:
          type: "integer"
          format: "int64"
          example: 90
        image:
          type: "string"
          example: "https://www.image.com"
        category:
          $ref: "#/components/schemas/CategoryDTO"
        language:
          $ref: "#/components/schemas/LanguageDTO"
    ChannelDTO:
      type: "object"
      properties:
        authorId:
          type: "integer"
          format: "int64"
          minimum: 1
          example: 1
        name:
          type: "string"
          pattern: ^\S
          example: "some name channel"
        description:
          type: "string"
          pattern: ^\S
          example: "about of channel"
        languageId:
          type: "integer"
          format: "int64"
          minimum: 1
          example: 1
        categoryId:
          type: "integer"
          format: "int64"
          minimum: 1
          example: 1
        image:
          type: "string"
          pattern: ^((https?|ftp|smtp)://)?(www.)?[a-z0-9]+\.[a-z]+(/[a-zA-Z0-9#]+/?)*$
          example: "https://www.image.com"
    UpdateChannelDTO:
      type: "object"
      properties:
        name:
          type: "string"
          pattern: ^\S
          example: "some name channel"
        description:
          type: "string"
          pattern: ^\S
          example: "about of channel"
        languageId:
          type: "integer"
          format: "int64"
          minimum: 1
          example: 1
        categoryId:
          type: "integer"
          format: "int64"
          minimum: 1
          example: 1
        image:
          type: "string"
          pattern: ^((https?|ftp|smtp)://)?(www.)?[a-z0-9]+\.[a-z]+(/[a-zA-Z0-9#]+/?)*$
          example: "https://www.image.com"
    Subscription:
      type: "object"
      properties:
        channelId:
          type: "integer"
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "some channel name"
    UpdateUserDTO:
      type: "object"
      properties:
        name:
          type: "string"
          pattern: ^\S
          example: "some user name"
        nickname:
          type: "string"
          pattern: ^\S
          example: "some user nickname"
        email:
          type: "string"
          pattern: ^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$
          example: "some@mail.com"
    UserDTO:
      type: "object"
      properties:
        userId:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        nickname:
          type: "string"
        email:
          type: "string"
    ErrorDTO:
      type: "object"
      properties:
        status:
          type: "integer"
          format: "int"
        message:
          type: "string"
    CategoryDTO:
      type: "object"
      properties:
        categoryId:
          type: "integer"
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "science"
    LanguageDTO:
      type: "object"
      properties:
        languageId:
          type: "integer"
          format: "int64"
          example: 1
        name:
          type: "string"
          example: "english"